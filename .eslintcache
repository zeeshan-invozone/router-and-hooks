[{"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/index.js":"1","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/reportWebVitals.js":"2","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/App.jsx":"3","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Home.jsx":"4","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/HeaderNav.jsx":"5","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/utils/profilesInfo.js":"6","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/ProfileCard.jsx":"7","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/AddProfileForm.jsx":"8","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Profile.jsx":"9","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/EditProfileModal/Skills.jsx":"10","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/EditProfileModal/GeneralInfo.jsx":"11"},{"size":547,"mtime":1611208183288,"results":"12","hashOfConfig":"13"},{"size":364,"mtime":1611064114249,"results":"14","hashOfConfig":"13"},{"size":523,"mtime":1611207944774,"results":"15","hashOfConfig":"13"},{"size":675,"mtime":1611197825892,"results":"16","hashOfConfig":"13"},{"size":982,"mtime":1611197779134,"results":"17","hashOfConfig":"13"},{"size":575,"mtime":1611200614913,"results":"18","hashOfConfig":"13"},{"size":2088,"mtime":1611202587614,"results":"19","hashOfConfig":"13"},{"size":2890,"mtime":1611201844317,"results":"20","hashOfConfig":"13"},{"size":5701,"mtime":1611210481531,"results":"21","hashOfConfig":"13"},{"size":1915,"mtime":1611093013766,"results":"22","hashOfConfig":"13"},{"size":2482,"mtime":1611209579078,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r4bibs",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/index.js",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/reportWebVitals.js",[],[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/App.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Home.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/HeaderNav.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/utils/profilesInfo.js",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/ProfileCard.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/AddProfileForm.jsx",["48"],"import React, { useState, useRef } from 'react';\nimport {\n  TextField,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  makeStyles,\n} from '@material-ui/core';\nimport profilesData from '../utils/profilesInfo';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function AddProfileForm({ onClose, show }) {\n  const classes = useStyles();\n  const { nameRef, ageRef, addressRef, companyRef, designationRef } = useRef();\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [designation, setDesignation] = useState('');\n  const [address, setAddress] = useState('');\n  const [company, setCompany] = useState('');\n\n  const submitNewProfile = () => {\n    const newProfile = {\n      name,\n      age,\n      designation,\n      address,\n      company,\n    };\n    profilesData.push(newProfile);\n    console.log('profileData', profilesData);\n  };\n  return (\n    <>\n      <Dialog\n        open={show}\n        onClose={onClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogContent>\n          <div className=\"text-center\">\n            <h5 className=\"dark-grey-text mb-4\">\n              <strong>New Profile</strong>\n            </h5>\n          </div>\n          <form noValidate autoComplete=\"off\" className={classes.root}>\n            <TextField\n              inputRef={nameRef}\n              id=\"name\"\n              label=\"Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              error={name === ''}\n              helperText={name === '' ? 'Name is required' : ' '}\n            />\n            <TextField\n              inputRef={ageRef}\n              id=\"age\"\n              label=\"Age\"\n              value={age}\n              onChange={(e) => setAge(e.target.value)}\n            />\n            <TextField\n              inputRef={designationRef}\n              id=\"designation\"\n              label=\"Designation\"\n              value={designation}\n              onChange={(e) => setDesignation(e.target.value)}\n            />\n            <TextField\n              inputRef={companyRef}\n              id=\"company\"\n              label=\"Company\"\n              value={company}\n              onChange={(e) => setCompany(e.target.value)}\n            />\n            <TextField\n              inputRef={addressRef}\n              id=\"address\"\n              label=\"Address\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={submitNewProfile}>\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Profile.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/EditProfileModal/Skills.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/EditProfileModal/GeneralInfo.jsx",[],{"ruleId":"49","severity":1,"message":"50","line":38,"column":5,"nodeType":"51","messageId":"52","endLine":38,"endColumn":16},"no-console","Unexpected console statement.","MemberExpression","unexpected"]
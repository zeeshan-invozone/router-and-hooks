[{"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/index.tsx":"1","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/App.tsx":"2","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Routes.tsx":"3","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/utils/profilesInfo.ts":"4","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Profile.tsx":"5","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/HeaderNav.tsx":"6","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/EditProfile.tsx":"7","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/AddProfileForm.tsx":"8","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/StyledComponents/HelloWorld.tsx":"9","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Sorting/Sorting.tsx":"10","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Firebase/firebase.ts":"11","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/ReactTable7/ReactTable.tsx":"12","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/ReactTable7/TableContainer.tsx":"13","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Assignment/TextAssignment.tsx":"14","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/CouldFunc/CloudFunctions.tsx":"15","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/Authentication.tsx":"16","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/SignIn.tsx":"17","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/SignUp.tsx":"18","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/ForgotPassword.tsx":"19","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/AdditionalInfo.tsx":"20","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/ResetPassword.tsx":"21","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/PrivateRoute.tsx":"22","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Firebase/firebase_api.ts":"23"},{"size":244,"mtime":1612851941740,"results":"24","hashOfConfig":"25"},{"size":182,"mtime":1612869247752,"results":"26","hashOfConfig":"25"},{"size":2287,"mtime":1612851189211,"results":"27","hashOfConfig":"25"},{"size":619,"mtime":1612851151109,"results":"28","hashOfConfig":"25"},{"size":4368,"mtime":1612869223912,"results":"29","hashOfConfig":"25"},{"size":2211,"mtime":1612852836179,"results":"30","hashOfConfig":"25"},{"size":3371,"mtime":1612852909264,"results":"31","hashOfConfig":"25"},{"size":3898,"mtime":1612869120568,"results":"32","hashOfConfig":"25"},{"size":1490,"mtime":1612853067594,"results":"33","hashOfConfig":"25"},{"size":1257,"mtime":1612853186299,"results":"34","hashOfConfig":"25"},{"size":881,"mtime":1612853149352,"results":"35","hashOfConfig":"25"},{"size":3706,"mtime":1612853159777,"results":"36","hashOfConfig":"25"},{"size":1565,"mtime":1612853166436,"results":"37","hashOfConfig":"25"},{"size":2051,"mtime":1612867841009,"results":"38","hashOfConfig":"25"},{"size":2306,"mtime":1612868832662,"results":"39","hashOfConfig":"25"},{"size":664,"mtime":1612867626276,"results":"40","hashOfConfig":"25"},{"size":3311,"mtime":1612857088658,"results":"41","hashOfConfig":"25"},{"size":3258,"mtime":1612866950467,"results":"42","hashOfConfig":"25"},{"size":1825,"mtime":1612867655627,"results":"43","hashOfConfig":"25"},{"size":5168,"mtime":1612866712780,"results":"44","hashOfConfig":"25"},{"size":2018,"mtime":1612867728569,"results":"45","hashOfConfig":"25"},{"size":514,"mtime":1612853396404,"results":"46","hashOfConfig":"25"},{"size":1804,"mtime":1612864114767,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"r4bibs",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/index.tsx",[],[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/App.tsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Routes.tsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/utils/profilesInfo.ts",[],[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Profile.tsx",["100"],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/HeaderNav.tsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/EditProfile.tsx",["101","102"],"import React, { useRef, useState } from 'react';\nimport { TextField, makeStyles, Button } from '@material-ui/core';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport firebase from './Firebase/firebase';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n    width: '30%',\n    margin: 'auto',\n    textAlign: 'center',\n    marginTop: '2rem',\n  },\n  btn: {\n    '&.MuiButtonBase-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nconst EditProfile = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const history = useHistory();\n  const [isAdd, setIsAdd] = useState(false);\n  const nameRef = useRef();\n  const ageRef = useRef();\n  const addressRef = useRef();\n  const companyRef = useRef();\n  const designationRef = useRef();\n  const formRef = useRef();\n  const updateRef = useRef();\n  const addPRef = useRef();\n\n  const { name, age, designation, company, address, id } = location.state.data;\n  console.log('data', location.state.data);\n  const [names, setName] = useState(name);\n  const [ages, setAge] = useState(age);\n  const [designations, setDesignation] = useState(designation);\n  const [addresss, setAddress] = useState(address);\n  const [companys, setCompany] = useState(company);\n  const fire = firebase.firestore();\n  const updateProfile = async () => {\n    // fileData[id].name = nameRef.current.value;\n    // fileData[id].age = ageRef.current.value;\n    // fileData[id].address = addressRef.current.value;\n    // fileData[id].designation = designationRef.current.value;\n    // fileData[id].company = companyRef.current.value;\n    // const userRef = firebaseConfig.database().ref('User').child(id);\n    const userRef = fire.collection('users').doc(id);\n    const res = await userRef.set({\n      name: names,\n      age: ages,\n      designation: designations,\n      company: companys,\n      address: addresss,\n    });\n    console.log('res', res);\n    history.push('/');\n  };\n  return (\n    <div>\n      <form noValidate ref={formRef} autoComplete=\"off\" className={classes.root}>\n        <TextField\n          inputRef={nameRef}\n          id=\"name\"\n          label=\"Name\"\n          value={names}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <TextField\n          inputRef={ageRef}\n          id=\"age\"\n          label=\"Age\"\n          value={ages}\n          onChange={(e) => setAge(e.target.value)}\n        />\n        <TextField\n          inputRef={designationRef}\n          id=\"designation\"\n          label=\"Designation\"\n          value={designations}\n          onChange={(e) => setDesignation(e.target.value)}\n        />\n        <TextField\n          inputRef={companyRef}\n          id=\"company\"\n          label=\"Company\"\n          value={companys}\n          onChange={(e) => setCompany(e.target.value)}\n        />\n        <TextField\n          inputRef={addressRef}\n          id=\"address\"\n          label=\"Address\"\n          value={addresss}\n          onChange={(e) => setAddress(e.target.value)}\n        />\n\n        <Button\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"secondary\"\n          ref={updateRef}\n          onClick={updateProfile}\n        >\n          Update\n        </Button>\n      </form>\n    </div>\n  );\n};\nexport default EditProfile;\n","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/AddProfileForm.tsx",["103"],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/StyledComponents/HelloWorld.tsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Sorting/Sorting.tsx",["104"],"import React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport './sorting.css';\nconst options = [\n  { label: 'zeeshan', value: '1' },\n  { label: 'akram', value: '2' },\n  { label: 'amir', value: '3' },\n  { label: 'rizwan', value: '4' },\n  { label: 'naeem', value: '5' },\n  { label: 'the naeem', value: '6' },\n  { label: 'The Ahmed', value: '7' },\n  { label: 'Ali Ahmed', value: '8' },\n];\nconst Sorting = () => {\n  const [sort, setSort] = useState([]);\n\n  const arrarySort = (opt) => {\n    const newOptions = opt.map((item) => {\n      const result = item.label.trim().replace(/the/gi, '');\n      const newResult = result.trim().replace(/\\s/g, '_');\n      const obj = { label: newResult, value: item.value };\n      return obj;\n    });\n    const byName = newOptions.slice(0);\n    byName.sort((a, b) => {\n      const x = a.label.toLowerCase();\n      const y = b.label.toLowerCase();\n      return x < y ? -1 : x > y ? 1 : 0;\n    });\n    setSort(byName);\n  };\n  useEffect(() => {\n    arrarySort(options);\n  }, []);\n\n  const handleChange = (e) => {\n    const current = e.target.id;\n    console.log(current);\n  };\n  return (\n    <div>\n      <Select options={sort} onChange={handleChange} />\n    </div>\n  );\n};\n\nexport default Sorting;\n","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Firebase/firebase.ts",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/ReactTable7/ReactTable.tsx",["105"],"import React, { useEffect, useMemo, useState } from 'react';\nimport UserData from '../../utils/profilesInfo';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport TableContainer from './TableContainer';\nimport AddProfileForm from '../AddProfileForm';\nimport firebase from '../Firebase/firebase';\n\nconst ReactTable = () => {\n  const [open, setOpen] = useState(false);\n  const [users, setUsers] = useState([]);\n  const fire = firebase.firestore();\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    getAllUsers();\n    setOpen(false);\n  };\n\n  const getAllUsers = async () => {\n    // firebaseConfig\n    //   .database()\n    //   .ref('User')\n    //   .on('value', (snapshot) => {\n    //     const obj = snapshot.val();\n    //     if (obj) {\n    //       const values = Object.keys(obj).map(function (key) {\n    //         return obj[key];\n    //       });\n    //       setUsers(values);\n    //     } else {\n    //       setUsers('');\n    //     }\n    //   });\n    // const todoRef = firebaseConfig.database().ref('User');\n    // todoRef.on('value', (snapshot) => {\n    //   const user = snapshot.val();\n    //   const userList = [];\n    //   for (let id in user) {\n    //     userList.push({ id, ...user[id] });\n    //   }\n    //   setUsers(userList);\n    // });\n    const user = await fire.collection('users').get();\n    const allUsers = [];\n    user.forEach((doc) => {\n      let userData = doc.data();\n      userData['id'] = doc.id;\n      console.log('userDate', userData);\n      allUsers.push(userData);\n    });\n    setUsers(allUsers);\n  };\n\n  const data = useMemo(() => users, [users]);\n  let history = useHistory();\n  const handleDelete = async (e, cell) => {\n    e.preventDefault();\n    const id = cell.row.original.id;\n\n    const res = await fire.collection('users').doc(id).delete();\n  };\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'name', // accessor is the \"key\" in the data\n      },\n      {\n        Header: 'Age',\n        accessor: 'age',\n      },\n      {\n        Header: 'Address',\n        accessor: 'address', // accessor is the \"key\" in the data\n      },\n      {\n        Header: 'Designation',\n        accessor: 'designation',\n      },\n      {\n        Header: 'Company',\n        accessor: 'company',\n      },\n      {\n        Header: 'Delete',\n        accessor: 'delete',\n        // eslint-disable-next-line react/display-name\n        Cell: (cell) => (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => handleDelete(e, cell)}\n          >\n            Delete\n          </Button>\n        ),\n      },\n      {\n        Header: 'Edit',\n        accessor: 'edit',\n        // eslint-disable-next-line react/display-name\n        Cell: (cell) => (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            value={cell.accessor}\n            onClick={() =>\n              history.push('/edit', {\n                data: cell.row.original,\n              })\n            }\n          >\n            Edit\n          </Button>\n        ),\n      },\n    ],\n    []\n  );\n\n  return (\n    <div className=\"m-5 text-center\">\n      <Button\n        className=\"m-2\"\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={handleOpen}\n      >\n        Add New User\n      </Button>\n      {users.length > 0 ? (\n        <TableContainer columns={columns} data={data} />\n      ) : (\n        'User not Found yet Please add new One'\n      )}\n\n      {open && <AddProfileForm show={open} onClose={handleClose} />}\n    </div>\n  );\n};\n\nexport default ReactTable;\n","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/ReactTable7/TableContainer.tsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Assignment/TextAssignment.tsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/CouldFunc/CloudFunctions.tsx",["106"],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/Authentication.tsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/SignIn.tsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/SignUp.tsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/ForgotPassword.tsx",["107"],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/AdditionalInfo.tsx",["108"],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/ResetPassword.tsx",["109"],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/PrivateRoute.tsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Firebase/firebase_api.ts",["110"],"import firebase from './firebase';\n\ntype FP = {\n  email: string;\n};\n\ntype REGISTRATION = {\n  email: string;\n  password: string;\n};\n\ntype USER = {\n  name: string;\n  age: string;\n  address: string;\n  company: string;\n  designation: string;\n  uid: string;\n  imageUrl: string;\n};\n\ntype RESET = {\n  code: string;\n  password: string;\n};\n\nexport const SIGN_UP = async (reg: REGISTRATION) => {\n  try {\n    return await firebase\n      .auth()\n      .createUserWithEmailAndPassword(reg.email, reg.password);\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const FORGOT_PASSWORD = async (forgot: FP) => {\n  try {\n    return await firebase.auth().sendPasswordResetEmail(forgot.email);\n  } catch (error) {\n    return error.message;\n  }\n};\nexport const RESET_PASSWORD = async (reset: RESET) => {\n  try {\n    return await firebase.auth().confirmPasswordReset(reset.code, reset.password);\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const SIGN_OUT = async () => {\n  try {\n    return await firebase.auth().signOut();\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const SIGN_IN = async (signin: REGISTRATION) => {\n  try {\n    return await firebase\n      .auth()\n      .signInWithEmailAndPassword(signin.email, signin.password);\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const CREATE_USER_PROFILE = async (user: USER) => {\n  try {\n    const db = firebase.firestore();\n    const newUser = {\n      uid: user.uid,\n      name: user.name,\n      age: user.age,\n      address: user.address,\n      company: user.company,\n      designation: user.designation,\n      imageUrl: user.imageUrl,\n    };\n    const res = await db.collection('users').doc(user.uid).set(newUser);\n    console.log('res', res);\n    return res;\n  } catch (error) {\n    return error.message;\n  }\n};\n",{"ruleId":"111","severity":1,"message":"112","line":62,"column":5,"nodeType":"113","messageId":"114","endLine":62,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":39,"column":3,"nodeType":"113","messageId":"114","endLine":39,"endColumn":14},{"ruleId":"111","severity":1,"message":"112","line":61,"column":5,"nodeType":"113","messageId":"114","endLine":61,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":58,"column":5,"nodeType":"113","messageId":"114","endLine":58,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":38,"column":5,"nodeType":"113","messageId":"114","endLine":38,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":53,"column":7,"nodeType":"113","messageId":"114","endLine":53,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":35,"column":5,"nodeType":"113","messageId":"114","endLine":35,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":37,"column":5,"nodeType":"113","messageId":"114","endLine":37,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":61,"column":7,"nodeType":"113","messageId":"114","endLine":61,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":21,"column":7,"nodeType":"113","messageId":"114","endLine":21,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":83,"column":5,"nodeType":"113","messageId":"114","endLine":83,"endColumn":16},"no-console","Unexpected console statement.","MemberExpression","unexpected"]
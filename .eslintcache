[{"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/index.js":"1","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/reportWebVitals.js":"2","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/App.jsx":"3","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Routes.jsx":"4","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/StyledComponents/HelloWorld.js":"5","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/HeaderNav.jsx":"6","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Home.jsx":"7","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Profile.jsx":"8","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/EditProfile.jsx":"9","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/AllProfiles.jsx":"10","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/ReactTable7/ReactTable.jsx":"11","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/utils/profilesInfo.js":"12","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/ProfileCard.jsx":"13","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/ReactTable7/TableContainer.jsx":"14","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/EditProfileModal/Skills.jsx":"15","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/AddProfileForm.jsx":"16","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Firebase/firebase.js":"17","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Assignment/TextAssignment.jsx":"18","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/Authentication.js":"19","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/SignIn.js":"20","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/SignUp.js":"21","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/ResetPassword.js":"22","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/AdditionalInfo.js":"23","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/PrivateRoute.js":"24"},{"size":547,"mtime":1611208183288,"results":"25","hashOfConfig":"26"},{"size":364,"mtime":1611064114249,"results":"27","hashOfConfig":"26"},{"size":178,"mtime":1611604429765,"results":"28","hashOfConfig":"26"},{"size":1805,"mtime":1611876646383,"results":"29","hashOfConfig":"26"},{"size":1473,"mtime":1611293410590,"results":"30","hashOfConfig":"26"},{"size":1544,"mtime":1611876325383,"results":"31","hashOfConfig":"26"},{"size":675,"mtime":1611197825892,"results":"32","hashOfConfig":"26"},{"size":3487,"mtime":1611290589530,"results":"33","hashOfConfig":"26"},{"size":3452,"mtime":1611739759087,"results":"34","hashOfConfig":"26"},{"size":3272,"mtime":1611289994828,"results":"35","hashOfConfig":"26"},{"size":3788,"mtime":1611755069399,"results":"36","hashOfConfig":"26"},{"size":619,"mtime":1611236082013,"results":"37","hashOfConfig":"26"},{"size":2088,"mtime":1611202587614,"results":"38","hashOfConfig":"26"},{"size":1545,"mtime":1611575911044,"results":"39","hashOfConfig":"26"},{"size":1905,"mtime":1611290506308,"results":"40","hashOfConfig":"26"},{"size":4220,"mtime":1611739059469,"results":"41","hashOfConfig":"26"},{"size":452,"mtime":1611813673205,"results":"42","hashOfConfig":"26"},{"size":2104,"mtime":1611812675062,"results":"43","hashOfConfig":"26"},{"size":651,"mtime":1611875406196,"results":"44","hashOfConfig":"26"},{"size":3383,"mtime":1611876120140,"results":"45","hashOfConfig":"26"},{"size":3321,"mtime":1611876150878,"results":"46","hashOfConfig":"26"},{"size":2199,"mtime":1611876194324,"results":"47","hashOfConfig":"26"},{"size":5924,"mtime":1611875758961,"results":"48","hashOfConfig":"26"},{"size":514,"mtime":1611874733512,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"r4bibs",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/index.js",[],[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/reportWebVitals.js",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/App.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Routes.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/StyledComponents/HelloWorld.js",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/HeaderNav.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Home.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Profile.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/EditProfile.jsx",["103","104","105"],"import React, { useRef, useState } from 'react';\nimport { TextField, makeStyles, Button } from '@material-ui/core';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { firebaseConfig, db } from './Firebase/firebase';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n    width: '30%',\n    margin: 'auto',\n    textAlign: 'center',\n    marginTop: '2rem',\n  },\n  btn: {\n    '&.MuiButtonBase-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function EditProfile() {\n  const classes = useStyles();\n  const location = useLocation();\n  const history = useHistory();\n  const [isAdd, setIsAdd] = useState(false);\n  const nameRef = useRef();\n  const ageRef = useRef();\n  const addressRef = useRef();\n  const companyRef = useRef();\n  const designationRef = useRef();\n  const formRef = useRef();\n  const updateRef = useRef();\n  const addPRef = useRef();\n\n  const { name, age, designation, company, address, id } = location.state.data;\n  console.log('data', location.state.data);\n  const [names, setName] = useState(name);\n  const [ages, setAge] = useState(age);\n  const [designations, setDesignation] = useState(designation);\n  const [addresss, setAddress] = useState(address);\n  const [companys, setCompany] = useState(company);\n\n  const updateProfile = () => {\n    // fileData[id].name = nameRef.current.value;\n    // fileData[id].age = ageRef.current.value;\n    // fileData[id].address = addressRef.current.value;\n    // fileData[id].designation = designationRef.current.value;\n    // fileData[id].company = companyRef.current.value;\n    // const userRef = firebaseConfig.database().ref('User').child(id);\n    const userRef = db.collection('users').doc(id);\n    userRef\n      .set({\n        name: names,\n        age: ages,\n        designation: designations,\n        company: companys,\n        address: addresss,\n      })\n      .then((docRef) => {\n        console.log(docRef);\n      })\n      .catch((error) => {\n        console.error('Error adding document: ', error);\n      });\n    history.push('/');\n  };\n  return (\n    <div>\n      <form noValidate ref={formRef} autoComplete=\"off\" className={classes.root}>\n        <TextField\n          inputRef={nameRef}\n          id=\"name\"\n          label=\"Name\"\n          value={names}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <TextField\n          inputRef={ageRef}\n          id=\"age\"\n          label=\"Age\"\n          value={ages}\n          onChange={(e) => setAge(e.target.value)}\n        />\n        <TextField\n          inputRef={designationRef}\n          id=\"designation\"\n          label=\"Designation\"\n          value={designations}\n          onChange={(e) => setDesignation(e.target.value)}\n        />\n        <TextField\n          inputRef={companyRef}\n          id=\"company\"\n          label=\"Company\"\n          value={companys}\n          onChange={(e) => setCompany(e.target.value)}\n        />\n        <TextField\n          inputRef={addressRef}\n          id=\"address\"\n          label=\"Address\"\n          value={addresss}\n          onChange={(e) => setAddress(e.target.value)}\n        />\n\n        <Button\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"secondary\"\n          ref={updateRef}\n          onClick={updateProfile}\n        >\n          Update\n        </Button>\n      </form>\n    </div>\n  );\n}\n","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/AllProfiles.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/ReactTable7/ReactTable.jsx",["106","107"],"import React, { useEffect, useMemo, useState } from 'react';\nimport UserData from '../../utils/profilesInfo';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport TableContainer from './TableContainer';\nimport AddProfileForm from '../AddProfileForm';\nimport { db, firebaseConfig } from '../Firebase/firebase';\n\nexport default function ReactTable() {\n  const [open, setOpen] = useState(false);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    getAllUsers();\n    setOpen(false);\n  };\n\n  const getAllUsers = async () => {\n    // firebaseConfig\n    //   .database()\n    //   .ref('User')\n    //   .on('value', (snapshot) => {\n    //     const obj = snapshot.val();\n    //     if (obj) {\n    //       const values = Object.keys(obj).map(function (key) {\n    //         return obj[key];\n    //       });\n    //       setUsers(values);\n    //     } else {\n    //       setUsers('');\n    //     }\n    //   });\n    // const todoRef = firebaseConfig.database().ref('User');\n    // todoRef.on('value', (snapshot) => {\n    //   const user = snapshot.val();\n    //   const userList = [];\n    //   for (let id in user) {\n    //     userList.push({ id, ...user[id] });\n    //   }\n    //   setUsers(userList);\n    // });\n    const user = await db.collection('users').get();\n    const allUsers = [];\n    user.forEach((doc) => {\n      let userData = doc.data();\n      userData['id'] = doc.id;\n      allUsers.push(userData);\n    });\n    setUsers(allUsers);\n  };\n\n  const data = useMemo(() => users, [users]);\n  let history = useHistory();\n  const handleDelete = (e, cell) => {\n    e.preventDefault();\n    const id = cell.row.original.id;\n    db.collection('users')\n      .doc(id)\n      .delete()\n      .then(() => {\n        console.log('Document successfully deleted!');\n      })\n      .catch((error) => {\n        console.error('Error removing document: ', error);\n      });\n  };\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'name', // accessor is the \"key\" in the data\n      },\n      {\n        Header: 'Age',\n        accessor: 'age',\n      },\n      {\n        Header: 'Address',\n        accessor: 'address', // accessor is the \"key\" in the data\n      },\n      {\n        Header: 'Designation',\n        accessor: 'designation',\n      },\n      {\n        Header: 'Company',\n        accessor: 'company',\n      },\n      {\n        Header: 'Delete',\n        accessor: 'delete',\n        // eslint-disable-next-line react/display-name\n        Cell: (cell) => (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => handleDelete(e, cell)}\n          >\n            Delete\n          </Button>\n        ),\n      },\n      {\n        Header: 'Edit',\n        accessor: 'edit',\n        // eslint-disable-next-line react/display-name\n        Cell: (cell) => (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            value={cell.accessor}\n            onClick={() =>\n              history.push('/edit', {\n                data: cell.row.original,\n              })\n            }\n          >\n            Edit\n          </Button>\n        ),\n      },\n    ],\n    []\n  );\n\n  return (\n    <div className=\"m-5 text-center\">\n      <Button\n        className=\"m-2\"\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={handleOpen}\n      >\n        Add New User\n      </Button>\n      {users.length > 0 ? (\n        <TableContainer columns={columns} data={data} />\n      ) : (\n        'User not Found yet Please add new One'\n      )}\n\n      {open && <AddProfileForm show={open} onClose={handleClose} />}\n    </div>\n  );\n}\n","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/utils/profilesInfo.js",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/ProfileCard.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/ReactTable7/TableContainer.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/EditProfileModal/Skills.jsx",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/AddProfileForm.jsx",["108","109"],"import React, { useState, useRef, useEffect } from 'react';\nimport {\n  TextField,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  makeStyles,\n} from '@material-ui/core';\nimport profilesData from '../utils/profilesInfo';\nimport { useForm } from 'react-hook-form';\nimport { db, firebaseConfig } from './Firebase/firebase';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  dialog: {\n    maxWidth: '350px',\n    minWidth: '350px',\n    textAlign: 'center',\n  },\n  error: {\n    color: 'red',\n  },\n}));\n\nexport default function AddProfileForm({ onClose, show }) {\n  const { register, handleSubmit, errors } = useForm();\n  const classes = useStyles();\n  const formRef = useRef();\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [designation, setDesignation] = useState('');\n  const [address, setAddress] = useState('');\n  const [company, setCompany] = useState('');\n\n  const onSubmits = () => {\n    const newProfile = {\n      name,\n      age,\n      designation,\n      address,\n      company,\n    };\n    // const realUser = firebaseConfig.database().ref('User');\n    // realUser.push(newProfile);\n    db.collection('users')\n      .add({\n        name,\n        age,\n        designation,\n        address,\n        company,\n      })\n      .then((res) => {\n        alert('user created successfully');\n        console.log('res', res);\n      })\n      .catch((error) => {\n        console.log('something went wrong', error);\n      });\n    onClose();\n  };\n  const Error = ({ name }) => {\n    return <div className={classes.error}>{name}</div>;\n  };\n  return (\n    <>\n      <Dialog\n        open={show}\n        onClose={onClose}\n        aria-labelledby=\"responsive-dialog-title\"\n        className={classes.dialog}\n      >\n        <DialogContent>\n          <div className=\"text-center\">\n            <h5 className=\"dark-grey-text mb-4\">\n              <strong>New Profile</strong>\n            </h5>\n          </div>\n          <form\n            onSubmit={handleSubmit(onSubmits)}\n            autoComplete=\"off\"\n            className={classes.root}\n            ref={formRef}\n          >\n            <TextField\n              name=\"nam\"\n              label=\"Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              inputRef={register({ required: true })}\n              helperText={errors.nam ? <Error name=\"name is required\" /> : ''}\n            />\n            <TextField\n              inputRef={register({ required: true })}\n              name=\"ag\"\n              label=\"Age\"\n              value={age}\n              onChange={(e) => setAge(e.target.value)}\n              helperText={errors.ag ? <Error name=\"age is required\" /> : ''}\n            />\n            <TextField\n              inputRef={register({ required: true })}\n              name=\"desig\"\n              label=\"Designation\"\n              value={designation}\n              onChange={(e) => setDesignation(e.target.value)}\n              helperText={\n                errors.desig ? <Error name=\"designation is required\" /> : ''\n              }\n            />\n            <TextField\n              inputRef={register({ required: true })}\n              name=\"com\"\n              label=\"Company\"\n              value={company}\n              onChange={(e) => setCompany(e.target.value)}\n              helperText={errors.com ? <Error name=\"company is required\" /> : ''}\n            />\n            <TextField\n              inputRef={register({ required: true })}\n              name=\"add\"\n              label=\"Address\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n              helperText={errors.add ? <Error name=\"address is required\" /> : ''}\n            />\n            <input\n              type=\"submit\"\n              className=\"mt-3\"\n              style={{ backgroundColor: 'blue', color: 'white', padding: '3px 5px' }}\n            />\n          </form>\n        </DialogContent>\n        {/* <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>\n            Cancel\n          </Button>\n        </DialogActions> */}\n      </Dialog>\n    </>\n  );\n}\n","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Firebase/firebase.js",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/Assignment/TextAssignment.jsx",["110"],"import React, { useState } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nexport default function TextAssignment() {\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState('');\n  const [isClick, setClicked] = useState(false);\n  // const data = 'sjkdslsdjdlllooo ittsssiiiiii otspso ministernopon';\n\n  const handleSubmit = () => {\n    const temp = [];\n    if (input.length > 0) {\n      const array = input.split(' ');\n      array.forEach((item) => {\n        temp.push(maxChar(item));\n      });\n      setClicked(true);\n      setResult(temp.join(''));\n    } else {\n      setClicked(true);\n      setResult('Please enter a valid string');\n    }\n  };\n  const maxChar = (str) => {\n    const myStr = str.toLowerCase();\n    const charMap = {};\n    let max = 0;\n    let maxChar = '';\n    for (const char of myStr) {\n      if (!charMap[char]) {\n        charMap[char] = 1;\n      } else {\n        charMap[char]++;\n      }\n    }\n    console.log('charMap', charMap);\n\n    for (const char in charMap) {\n      if (charMap[char] > max) {\n        max = charMap[char];\n        maxChar = char;\n      }\n    }\n\n    return maxChar;\n  };\n\n  // const getMax = (str) => {\n  //   let max = 0;\n  //   let maxChar = '';\n  //   str.split('').forEach((char) => {\n  //     if (str.split(char).length > max) {\n  //       max = str.split(char).length;\n  //       maxChar = char;\n  //     }\n  //   });\n  //   return maxChar;\n  // };\n  return (\n    <div className=\"m-2 d-flex justify-content-center flex-column align-items-center\">\n      <TextField\n        id=\"outlined-multiline-static\"\n        multiline\n        rows={10}\n        placeholder=\"Enter Text Here\"\n        variant=\"outlined\"\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        className=\"m-2\"\n        onClick={handleSubmit}\n      >\n        Submit\n      </Button>\n\n      {isClick && (\n        <div>\n          <h2>Result</h2>\n          <p style={{ backgroundColor: 'yellow', padding: '10px' }}>{result}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/Authentication.js",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/SignIn.js",[],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/SignUp.js",["111"],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/ResetPassword.js",["112","113","114"],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/AdditionalInfo.js",["115","116","117"],"/home/zeeshan-invozone/Invozone/training/learn-hooks/src/components/auth/PrivateRoute.js",[],{"ruleId":"118","severity":1,"message":"119","line":39,"column":3,"nodeType":"120","messageId":"121","endLine":39,"endColumn":14},{"ruleId":"118","severity":1,"message":"119","line":63,"column":9,"nodeType":"120","messageId":"121","endLine":63,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":66,"column":9,"nodeType":"120","messageId":"121","endLine":66,"endColumn":22},{"ruleId":"118","severity":1,"message":"119","line":66,"column":9,"nodeType":"120","messageId":"121","endLine":66,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":69,"column":9,"nodeType":"120","messageId":"121","endLine":69,"endColumn":22},{"ruleId":"118","severity":1,"message":"119","line":60,"column":9,"nodeType":"120","messageId":"121","endLine":60,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":63,"column":9,"nodeType":"120","messageId":"121","endLine":63,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":35,"column":5,"nodeType":"120","messageId":"121","endLine":35,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":41,"column":9,"nodeType":"120","messageId":"121","endLine":41,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":39,"column":9,"nodeType":"120","messageId":"121","endLine":39,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":43,"column":9,"nodeType":"120","messageId":"121","endLine":43,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":45,"column":5,"nodeType":"120","messageId":"121","endLine":45,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":48,"column":7,"nodeType":"120","messageId":"121","endLine":48,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":60,"column":11,"nodeType":"120","messageId":"121","endLine":60,"endColumn":22},{"ruleId":"118","severity":1,"message":"119","line":64,"column":11,"nodeType":"120","messageId":"121","endLine":64,"endColumn":22},"no-console","Unexpected console statement.","MemberExpression","unexpected"]